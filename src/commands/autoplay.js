import { SlashCommandBuilder } from 'discord.js';
import { isAutoplayEnabled, setAutoplay, toggleAutoplay } from '../state/autoplay.js';

export default {
  data: new SlashCommandBuilder()
    .setName('autoplay')
    .setDescription('Báº­t/táº¯t cháº¿ Ä‘á»™ tá»± Ä‘á»™ng phÃ¡t bÃ i hÃ¡t tÆ°Æ¡ng tá»±')
    .addStringOption(option =>
      option
        .setName('mode')
        .setDescription('Cháº¿ Ä‘á»™')
        .addChoices(
          { name: 'Báº­t', value: 'on' },
          { name: 'Táº¯t', value: 'off' },
          { name: 'Chuyá»ƒn Ä‘á»•i', value: 'toggle' },
          { name: 'Tráº¡ng thÃ¡i', value: 'status' }
        )
    ),

  async execute(interaction) {
    const guildId = interaction.guild.id;
    const mode = interaction.options.getString('mode') || 'status';

    let enabled = isAutoplayEnabled(guildId);

    switch (mode) {
      case 'on':
        enabled = setAutoplay(guildId, true);
        return interaction.reply('ðŸ¤– Autoplay Ä‘Ã£ Ä‘Æ°á»£c báº­t. Bot sáº½ tá»± Ä‘á»™ng phÃ¡t bÃ i hÃ¡t tÆ°Æ¡ng tá»± khi hÃ ng Ä‘á»£i trá»‘ng.');
      case 'off':
        enabled = setAutoplay(guildId, false);
        return interaction.reply('ðŸ›‘ Autoplay Ä‘Ã£ Ä‘Æ°á»£c táº¯t.');
      case 'toggle':
        enabled = toggleAutoplay(guildId);
        return interaction.reply(enabled ? 'ðŸ¤– Autoplay: Báº¬T' : 'ðŸ›‘ Autoplay: Táº®T');
      case 'status':
      default:
        return interaction.reply(enabled ? 'ðŸ¤– Autoplay Ä‘ang Báº¬T.' : 'ðŸ›‘ Autoplay Ä‘ang Táº®T.');
    }
  }
};
